.TH "/Users/andrew/Documents/Andy/programming/libgencurvefit/src/errorEstimation.c" 3 "Sat Sep 11 2010" "libgencurvefit" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/Users/andrew/Documents/Andy/programming/libgencurvefit/src/errorEstimation.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'gencurvefit.h'\fP
.br
\fC#include 'math.h'\fP
.br
\fC#include 'stdlib.h'\fP
.br
\fC#include 'string.h'\fP
.br

.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBTINY\fP   1.0e-20"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBgetCovarianceMatrix\fP (double **covarianceMatrix, void *userdata, \fBfitfunction\fP fitfun, double cost, double *coefs, int numcoefs, unsigned int *holdvector, double *ydata, double *edata, long datapoints, double **xdata, int numDataDims, int unitSD)"
.br
.in -1c
.SH "Define Documentation"
.PP 
.SS "#define TINY   1.0e-20"
.SH "Function Documentation"
.PP 
.SS "int getCovarianceMatrix (double ** covarianceMatrix, void * userdata, \fBfitfunction\fP fitfun, double cost, double * coefs, int numcoefs, unsigned int * holdvector, double * ydata, double * edata, long datapoints, double ** xdata, int numDataDims, int unitSD)"in \fBerrorEstimation.c\fP. Calculates a hessian gradient matrix based covariance matrix. The covariance matrix is returned via the covarianceMatrix pointer and must be freed afterwards.
.PP
\fBParameters:\fP
.RS 4
\fIcovarianceMatrix\fP - the covariance matrix is returned in this array. It must be free'd afterwards.
.br
\fIuserdata\fP - pass in user specific information to the fitfunction with this pointer.
.br
\fIfitfun\fP - your fitfunction
.br
\fIcost\fP - the value of the cost function for the parameters specified
.br
\fIcoefs[numcoefs]\fP - an array containing the coefficients. The covariance matrix is assessed for these values
.br
\fInumcoefs\fP - the number of coefficients
.br
\fIholdvector[numcoefs]\fP - an array specifying which parameters were held (=1) or varied (=0) during the fit
.br
\fIydata[datapoints]\fP - an array of the data being fitting
.br
\fIedata[datapoints]\fP - an array for the error bars for the data being fitted.
.br
\fIdatapoints\fP - the number of datapoints being fitted
.br
\fIxdata[numDataDims][datapoints]\fP - an array containing the independent variables for the fit
.br
\fInumDataDims\fP - how many independent variables do you have?
.br
\fIunitSD\fP - specify as 1 if the datapoints were unit weighted. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for libgencurvefit from the source code.
